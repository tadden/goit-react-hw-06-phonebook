{"version":3,"sources":["Componets/Container/Container.module.css","Componets/ContactForm/ContactForm.module.css","Componets/ContactList/ContactList.module.css","Componets/Filter/Filter.module.css","Componets/Container/Container.js","redux/actions.js","redux/selector.js","Componets/ContactForm/ContactForm.js","Componets/ContactList/ContactList.js","Componets/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","getItems","state","contacts","items","getFilter","filter","getFilteredContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleNameChange","e","target","value","form","onSubmit","preventDefault","find","contact","duplicateValidator","actions","alert","htmlFor","type","onChange","pattern","title","required","ContactList","map","item","onClick","Filter","Phonebook","createReducer","_","phonebookReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4fa46dd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2JIsw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__xhKpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3h3HN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__5hxKf\"};","import s from './Container.module.css';\n\nfunction Container({children}) {\n    return (<div className={s.container}>{children}</div>)\n};\n\nexport default Container;\n","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction(\n  'contacts.Add',\n  (name, number) => ({ payload: { name, number, id: uuidv4() } })\n);\n\nexport const deleteContact = createAction(\n  'contacts/Delete',\n);\n\nexport const filterContact = createAction(\n  'contacts/Filter',\n);\n","export const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const items = getItems(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport s from './ContactForm.module.css';\nimport { getItems } from 'redux/selector';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleNameChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      // no default\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicateValidator = name =>\n      items.find(contact => contact.name === name);\n\n    duplicateValidator(name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(actions.addContact(name, number));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"\">Name</label>\n\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label htmlFor=\"\">Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleNameChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n}","import { v4 as uuidv4 } from 'uuid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport { getFilteredContacts } from 'redux/selector';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const items = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {items.map(({ name, number, id }) => (\n        <li className={s.item} key={uuidv4()}>\n          <p>\n            {name} : {number}\n          </p>\n          <button onClick={() => dispatch(actions.deleteContact(id))}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/selector';\nimport * as actions from '../../redux/actions';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.filter}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={e =>\n            dispatch(actions.filterContact(e.target.value))\n          }\n        ></input>\n      </label>\n    </div>\n  );\n}","import './App.css';\nimport Container from 'Componets/Container';\nimport ContactForm from 'Componets/ContactForm';\nimport ContactList from 'Componets/ContactList';\nimport Filter from 'Componets/Filter';\n\n\nexport default function Phonebook() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <h2>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n};\n\n  \n  \n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.filterContact]: (_, { payload }) => payload,\n});\n\nconst phonebookReducer = combineReducers({\n  items,\n  filter,\n});\n\nexport default phonebookReducer;\n","import {\n  configureStore,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        FLUSH,\n        REHYDRATE,\n        PAUSE,\n        PERSIST,\n        PURGE,\n        REGISTER,\n      ],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'phonebook',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(\n      phonebookPersistConfig,\n      phonebookReducer,\n    ),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport  { store, persistor };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store, persistor } from 'redux/store';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}